{"version":3,"file":"aria.min.js","sources":["../src/aria.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Enhancements to Bootstrap components for accessibility.\n *\n * @module     theme_boost/aria\n * @copyright  2018 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport Pending from \"core/pending\";\n\n/**\n * Drop downs from bootstrap don't support keyboard accessibility by default.\n */\nconst dropdownFix = () => {\n  let focusEnd = false;\n  const setFocusEnd = (end = true) => {\n    focusEnd = end;\n  };\n  const getFocusEnd = () => {\n    const result = focusEnd;\n    focusEnd = false;\n    return result;\n  };\n\n  // Special handling for navigation keys when menu is open.\n  const shiftFocus = (element) => {\n    const delayedFocus = (pendingPromise) => {\n      element.focus();\n      pendingPromise.resolve();\n    };\n    setTimeout(delayedFocus, 50, new Pending(\"core/aria:delayed-focus\"));\n  };\n\n  // Event handling for the dropdown menu button.\n  const handleMenuButton = (e) => {\n    const trigger = e.key;\n    let fixFocus = false;\n\n    // Space key or Enter key opens the menu.\n    if (trigger === \" \" || trigger === \"Enter\") {\n      fixFocus = true;\n      // Cancel random scroll.\n      e.preventDefault();\n      // Open the menu instead.\n      e.target.click();\n    }\n\n    // Up and Down keys also open the menu.\n    if (trigger === \"ArrowUp\" || trigger === \"ArrowDown\") {\n      fixFocus = true;\n    }\n\n    if (!fixFocus) {\n      // No need to fix the focus. Return early.\n      return;\n    }\n\n    // Fix the focus on the menu items when the menu is opened.\n    const menu = e.target.parentElement.querySelector('[role=\"menu\"]');\n    let menuItems = false;\n    let foundMenuItem = false;\n\n    if (menu) {\n      menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n    }\n    if (menuItems && menuItems.length > 0) {\n      // Up key opens the menu at the end.\n      if (trigger === \"ArrowUp\") {\n        setFocusEnd();\n      } else {\n        setFocusEnd(false);\n      }\n\n      if (getFocusEnd()) {\n        foundMenuItem = menuItems[menuItems.length - 1];\n      } else {\n        // The first menu entry, pretty reasonable.\n        foundMenuItem = menuItems[0];\n      }\n    }\n\n    if (foundMenuItem) {\n      shiftFocus(foundMenuItem);\n    }\n  };\n\n  // Search for menu items by finding the first item that has\n  // text starting with the typed character (case insensitive).\n  document.addEventListener(\"keypress\", (e) => {\n    if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n      const menu = e.target.closest('[role=\"menu\"]');\n      if (!menu) {\n        return;\n      }\n      const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n      if (!menuItems) {\n        return;\n      }\n\n      const trigger = e.key.toLowerCase();\n\n      for (let i = 0; i < menuItems.length; i++) {\n        const item = menuItems[i];\n        const itemText = item.text.trim().toLowerCase();\n        if (itemText.indexOf(trigger) == 0) {\n          shiftFocus(item);\n          break;\n        }\n      }\n    }\n  });\n\n  // Keyboard navigation for arrow keys, home and end keys.\n  document.addEventListener(\"keydown\", (e) => {\n    // We only want to set focus when users access the dropdown via keyboard as per\n    // guidelines defined in w3 aria practices 1.1 menu-button.\n    if (e.target.matches('[data-toggle=\"dropdown\"]')) {\n      handleMenuButton(e);\n    }\n\n    if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n      const trigger = e.key;\n      let next = false;\n      const menu = e.target.closest('[role=\"menu\"]');\n\n      if (!menu) {\n        return;\n      }\n      const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n      if (!menuItems) {\n        return;\n      }\n      // Down key.\n      if (trigger == \"ArrowDown\") {\n        for (let i = 0; i < menuItems.length - 1; i++) {\n          if (menuItems[i] == e.target) {\n            next = menuItems[i + 1];\n            break;\n          }\n        }\n        if (!next) {\n          // Wrap to first item.\n          next = menuItems[0];\n        }\n      } else if (trigger == \"ArrowUp\") {\n        // Up key.\n        for (let i = 1; i < menuItems.length; i++) {\n          if (menuItems[i] == e.target) {\n            next = menuItems[i - 1];\n            break;\n          }\n        }\n        if (!next) {\n          // Wrap to last item.\n          next = menuItems[menuItems.length - 1];\n        }\n      } else if (trigger == \"Home\") {\n        // Home key.\n        next = menuItems[0];\n      } else if (trigger == \"End\") {\n        // End key.\n        next = menuItems[menuItems.length - 1];\n      }\n\n      // Variable next is set if we do want to act on the keypress.\n      if (next) {\n        e.preventDefault();\n        shiftFocus(next);\n      }\n      return;\n    }\n  });\n\n  $(\".dropdown\").on(\"hidden.bs.dropdown\", (e) => {\n    // We need to focus on the menu trigger.\n    const trigger = e.target.querySelector('[data-toggle=\"dropdown\"]');\n    const focused = document.activeElement != document.body ? document.activeElement : null;\n    if (trigger && focused && e.target.contains(focused)) {\n      shiftFocus(trigger);\n    }\n  });\n};\n\n/**\n * A lot of Bootstrap's out of the box features don't work if dropdown items are not focusable.\n */\nconst comboboxFix = () => {\n  $(document).on(\"show.bs.dropdown\", (e) => {\n    if (e.relatedTarget.matches('[role=\"combobox\"]')) {\n      const combobox = e.relatedTarget;\n      const listbox = combobox.parentElement.querySelector('[role=\"listbox\"]');\n      const selectedOption = listbox.querySelector('[role=\"option\"][aria-selected=\"true\"]');\n\n      // To make sure ArrowDown doesn't move the active option afterwards.\n      setTimeout(() => {\n        if (selectedOption) {\n          selectedOption.classList.add(\"active\");\n          combobox.setAttribute(\"aria-activedescendant\", selectedOption.id);\n        } else {\n          const firstOption = listbox.querySelector('[role=\"option\"]');\n          firstOption.setAttribute(\"aria-selected\", \"true\");\n          firstOption.classList.add(\"active\");\n          combobox.setAttribute(\"aria-activedescendant\", firstOption.id);\n        }\n      }, 0);\n    }\n  });\n\n  $(document).on(\"hidden.bs.dropdown\", (e) => {\n    if (e.relatedTarget.matches('[role=\"combobox\"]')) {\n      const combobox = e.relatedTarget;\n      const listbox = combobox.parentElement.querySelector('[role=\"listbox\"]');\n\n      combobox.removeAttribute(\"aria-activedescendant\");\n\n      setTimeout(() => {\n        // Undo all previously highlighted options.\n        listbox.querySelectorAll('.active[role=\"option\"]').forEach((option) => {\n          option.classList.remove(\"active\");\n        });\n      }, 0);\n    }\n  });\n\n  // Handling keyboard events for both navigating through and selecting options.\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.target.matches('.select-menu [role=\"combobox\"]')) {\n      const combobox = e.target;\n      const trigger = e.key;\n      let next = null;\n      const options = combobox.parentElement.querySelectorAll('[role=\"listbox\"] [role=\"option\"]');\n      const activeOption = combobox.parentElement.querySelector('[role=\"listbox\"] .active[role=\"option\"]');\n\n      // Under the special case that the dropdown menu is being shown as a result of they key press (like when the user\n      // presses ArrowDown or Enter or ... to open the dropdown menu), activeOption is not set yet.\n      // It's because of a race condition with show.bs.dropdown event handler.\n      if (options && activeOption) {\n        if (trigger == \"ArrowDown\") {\n          for (let i = 0; i < options.length - 1; i++) {\n            if (options[i] == activeOption) {\n              next = options[i + 1];\n              break;\n            }\n          }\n        }\n        if (trigger == \"ArrowUp\") {\n          for (let i = 1; i < options.length; i++) {\n            if (options[i] == activeOption) {\n              next = options[i - 1];\n              break;\n            }\n          }\n        } else if (trigger == \"Home\") {\n          next = options[0];\n        } else if (trigger == \"End\") {\n          next = options[options.length - 1];\n        } else if (trigger == \" \" || trigger == \"Enter\") {\n          selectOption(combobox, activeOption);\n        } else {\n          // Search for options by finding the first option that has\n          // text starting with the typed character (case insensitive).\n          for (let i = 0; i < options.length; i++) {\n            const option = options[i];\n            const optionText = option.textContent.trim().toLowerCase();\n            const keyPressed = e.key.toLowerCase();\n            if (optionText.indexOf(keyPressed) == 0) {\n              next = option;\n              break;\n            }\n          }\n        }\n\n        // Variable next is set if we do want to act on the keypress.\n        if (next) {\n          e.preventDefault();\n          activeOption.classList.remove(\"active\");\n          next.classList.add(\"active\");\n          combobox.setAttribute(\"aria-activedescendant\", next.id);\n        }\n      }\n    }\n  });\n\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.matches('.select-menu [role=\"option\"]')) {\n      const option = e.target;\n      const combobox = option.closest(\".select-menu\").querySelector('[role=\"combobox\"]');\n      combobox.focus();\n      selectOption(combobox, option);\n    }\n  });\n\n  // In case some code somewhere else changes the value of the combobox.\n  document.addEventListener(\"change\", (e) => {\n    if (e.target.matches('.select-menu input[type=\"hidden\"]')) {\n      const combobox = e.target.parentElement.querySelector('[role=\"combobox\"]');\n      const option = e.target.parentElement.querySelector(`[role=\"option\"][data-value=\"${e.target.value}\"]`);\n\n      if (combobox && option) {\n        selectOption(combobox, option);\n      }\n    }\n  });\n\n  const selectOption = (combobox, option) => {\n    const oldSelectedOption = combobox.parentElement.querySelector(\n      '[role=\"listbox\"] [role=\"option\"][aria-selected=\"true\"]'\n    );\n    const inputElement = combobox.parentElement.querySelector('input[type=\"hidden\"]');\n\n    if (oldSelectedOption != option) {\n      if (oldSelectedOption) {\n        oldSelectedOption.removeAttribute(\"aria-selected\");\n      }\n      option.setAttribute(\"aria-selected\", \"true\");\n    }\n    combobox.textContent = option.textContent;\n    if (inputElement.value != option.dataset.value) {\n      inputElement.value = option.dataset.value;\n      inputElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\n    }\n  };\n};\n\n/**\n * After page load, focus on any element with special autofocus attribute.\n */\nconst autoFocus = () => {\n  window.addEventListener(\"load\", () => {\n    const alerts = document.querySelectorAll('[data-aria-autofocus=\"true\"][role=\"alert\"]');\n    Array.prototype.forEach.call(alerts, (autofocusElement) => {\n      // According to the specification an role=\"alert\" region is only read out on change to the content\n      // of that region.\n      autofocusElement.innerHTML += \" \";\n      autofocusElement.removeAttribute(\"data-aria-autofocus\");\n    });\n  });\n};\n\n/**\n * Changes the focus to the correct tab based on the key that is pressed.\n * @param {KeyboardEvent} e\n */\nconst updateTabFocus = (e) => {\n  const tabList = e.target.closest('[role=\"tablist\"]');\n  const vertical = tabList.getAttribute(\"aria-orientation\") == \"vertical\";\n  const rtl = window.right_to_left();\n  const arrowNext = vertical ? \"ArrowDown\" : rtl ? \"ArrowLeft\" : \"ArrowRight\";\n  const arrowPrevious = vertical ? \"ArrowUp\" : rtl ? \"ArrowRight\" : \"ArrowLeft\";\n  // eslint-disable-next-line max-len\n  const tabs = Array.prototype.filter.call(tabList.querySelectorAll('[role=\"tab\"]'), (tab) => !!tab.offsetHeight); // We only work with the visible tabs.\n\n  for (let i = 0; i < tabs.length; i++) {\n    tabs[i].index = i;\n  }\n\n  switch (e.key) {\n    case arrowNext:\n      e.preventDefault();\n      if (e.target.index !== undefined && tabs[e.target.index + 1]) {\n        tabs[e.target.index + 1].focus();\n      } else {\n        tabs[0].focus();\n      }\n      break;\n    case arrowPrevious:\n      e.preventDefault();\n      if (e.target.index !== undefined && tabs[e.target.index - 1]) {\n        tabs[e.target.index - 1].focus();\n      } else {\n        tabs[tabs.length - 1].focus();\n      }\n      break;\n    case \"Home\":\n      e.preventDefault();\n      tabs[0].focus();\n      break;\n    case \"End\":\n      e.preventDefault();\n      tabs[tabs.length - 1].focus();\n  }\n};\n\n/**\n * Fix accessibility issues regarding tab elements focus and their tab order in Bootstrap navs.\n */\nconst tabElementFix = () => {\n  document.addEventListener(\"keydown\", (e) => {\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"Home\", \"End\"].includes(e.key)) {\n      if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n        updateTabFocus(e);\n      }\n    }\n  });\n\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.matches('[role=\"tablist\"] [data-toggle=\"tab\"], [role=\"tablist\"] [data-toggle=\"pill\"]')) {\n      const tabs = e.target.closest('[role=\"tablist\"]').querySelectorAll('[data-toggle=\"tab\"], [data-toggle=\"pill\"]');\n      e.preventDefault();\n      $(e.target).tab(\"show\");\n      tabs.forEach((tab) => {\n        tab.tabIndex = -1;\n      });\n      e.target.tabIndex = 0;\n    }\n  });\n};\n\n/**\n * Fix keyboard interaction with Bootstrap Collapse elements.\n *\n * @see {@link https://www.w3.org/TR/wai-aria-practices-1.1/#disclosure|WAI-ARIA Authoring Practices 1.1 - Disclosure (Show/Hide)}\n */\nconst collapseFix = () => {\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.target.matches('[data-toggle=\"collapse\"]')) {\n      // Pressing space should toggle expand/collapse.\n      if (e.key === \" \") {\n        e.preventDefault();\n        e.target.click();\n      }\n    }\n  });\n};\n\nexport const init = () => {\n  dropdownFix();\n  comboboxFix();\n  autoFocus();\n  tabElementFix();\n  collapseFix();\n};\n"],"names":["dropdownFix","focusEnd","setFocusEnd","end","shiftFocus","element","setTimeout","pendingPromise","focus","resolve","Pending","handleMenuButton","e","trigger","key","fixFocus","preventDefault","target","click","menu","parentElement","querySelector","menuItems","foundMenuItem","querySelectorAll","length","result","getFocusEnd","document","addEventListener","matches","closest","toLowerCase","i","item","text","trim","indexOf","next","on","focused","activeElement","body","contains","tabElementFix","includes","tabList","vertical","getAttribute","rtl","window","right_to_left","arrowNext","arrowPrevious","tabs","Array","prototype","filter","call","tab","offsetHeight","index","undefined","updateTabFocus","forEach","tabIndex","relatedTarget","combobox","listbox","selectedOption","classList","add","setAttribute","id","firstOption","removeAttribute","option","remove","options","activeOption","selectOption","optionText","textContent","keyPressed","value","oldSelectedOption","inputElement","dataset","dispatchEvent","Event","bubbles","comboboxFix","alerts","autofocusElement","innerHTML"],"mappings":"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"}