{"version":3,"file":"scrollspy.min.js","sources":["../../src/bootstrap/scrollspy.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v4.6.2): scrollspy.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport $ from \"jquery\";\r\nimport Util from \"./util\";\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = \"scrollspy\";\r\nconst VERSION = \"4.6.2\";\r\nconst DATA_KEY = \"bs.scrollspy\";\r\nconst EVENT_KEY = `.${DATA_KEY}`;\r\nconst DATA_API_KEY = \".data-api\";\r\nconst JQUERY_NO_CONFLICT = $.fn[NAME];\r\n\r\nconst CLASS_NAME_DROPDOWN_ITEM = \"dropdown-item\";\r\nconst CLASS_NAME_ACTIVE = \"active\";\r\n\r\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`;\r\nconst EVENT_SCROLL = `scroll${EVENT_KEY}`;\r\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;\r\n\r\nconst METHOD_OFFSET = \"offset\";\r\nconst METHOD_POSITION = \"position\";\r\n\r\nconst SELECTOR_DATA_SPY = '[data-spy=\"scroll\"]';\r\nconst SELECTOR_NAV_LIST_GROUP = \".nav, .list-group\";\r\nconst SELECTOR_NAV_LINKS = \".nav-link\";\r\nconst SELECTOR_NAV_ITEMS = \".nav-item\";\r\nconst SELECTOR_LIST_ITEMS = \".list-group-item\";\r\nconst SELECTOR_DROPDOWN = \".dropdown\";\r\nconst SELECTOR_DROPDOWN_ITEMS = \".dropdown-item\";\r\nconst SELECTOR_DROPDOWN_TOGGLE = \".dropdown-toggle\";\r\n\r\nconst Default = {\r\n  offset: 10,\r\n  method: \"auto\",\r\n  target: \"\",\r\n};\r\n\r\nconst DefaultType = {\r\n  offset: \"number\",\r\n  method: \"string\",\r\n  target: \"(string|element)\",\r\n};\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass ScrollSpy {\r\n  constructor(element, config) {\r\n    this._element = element;\r\n    this._scrollElement = element.tagName === \"BODY\" ? window : element;\r\n    this._config = this._getConfig(config);\r\n    this._selector =\r\n      `${this._config.target} ${SELECTOR_NAV_LINKS},` +\r\n      `${this._config.target} ${SELECTOR_LIST_ITEMS},` +\r\n      `${this._config.target} ${SELECTOR_DROPDOWN_ITEMS}`;\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    this._activeTarget = null;\r\n    this._scrollHeight = 0;\r\n\r\n    $(this._scrollElement).on(EVENT_SCROLL, (event) => this._process(event));\r\n\r\n    this.refresh();\r\n    this._process();\r\n  }\r\n\r\n  // Getters\r\n  static get VERSION() {\r\n    return VERSION;\r\n  }\r\n\r\n  static get Default() {\r\n    return Default;\r\n  }\r\n\r\n  // Public\r\n  refresh() {\r\n    const autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;\r\n\r\n    const offsetMethod = this._config.method === \"auto\" ? autoMethod : this._config.method;\r\n\r\n    const offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;\r\n\r\n    this._offsets = [];\r\n    this._targets = [];\r\n\r\n    this._scrollHeight = this._getScrollHeight();\r\n\r\n    const targets = [].slice.call(document.querySelectorAll(this._selector));\r\n\r\n    targets\r\n      .map((element) => {\r\n        let target;\r\n        const targetSelector = Util.getSelectorFromElement(element);\r\n\r\n        if (targetSelector) {\r\n          target = document.querySelector(targetSelector);\r\n        }\r\n\r\n        if (target) {\r\n          const targetBCR = target.getBoundingClientRect();\r\n          if (targetBCR.width || targetBCR.height) {\r\n            // TODO (fat): remove sketch reliance on jQuery position/offset\r\n            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\r\n          }\r\n        }\r\n\r\n        return null;\r\n      })\r\n      .filter(Boolean)\r\n      .sort((a, b) => a[0] - b[0])\r\n      .forEach((item) => {\r\n        this._offsets.push(item[0]);\r\n        this._targets.push(item[1]);\r\n      });\r\n  }\r\n\r\n  dispose() {\r\n    $.removeData(this._element, DATA_KEY);\r\n    $(this._scrollElement).off(EVENT_KEY);\r\n\r\n    this._element = null;\r\n    this._scrollElement = null;\r\n    this._config = null;\r\n    this._selector = null;\r\n    this._offsets = null;\r\n    this._targets = null;\r\n    this._activeTarget = null;\r\n    this._scrollHeight = null;\r\n  }\r\n\r\n  // Private\r\n  _getConfig(config) {\r\n    config = {\r\n      ...Default,\r\n      ...(typeof config === \"object\" && config ? config : {}),\r\n    };\r\n\r\n    if (typeof config.target !== \"string\" && Util.isElement(config.target)) {\r\n      let id = $(config.target).attr(\"id\");\r\n      if (!id) {\r\n        id = Util.getUID(NAME);\r\n        $(config.target).attr(\"id\", id);\r\n      }\r\n\r\n      config.target = `#${id}`;\r\n    }\r\n\r\n    Util.typeCheckConfig(NAME, config, DefaultType);\r\n\r\n    return config;\r\n  }\r\n\r\n  _getScrollTop() {\r\n    return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\r\n  }\r\n\r\n  _getScrollHeight() {\r\n    return (\r\n      this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)\r\n    );\r\n  }\r\n\r\n  _getOffsetHeight() {\r\n    return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\r\n  }\r\n\r\n  _process() {\r\n    const scrollTop = this._getScrollTop() + this._config.offset;\r\n    const scrollHeight = this._getScrollHeight();\r\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\r\n\r\n    if (this._scrollHeight !== scrollHeight) {\r\n      this.refresh();\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n      const target = this._targets[this._targets.length - 1];\r\n\r\n      if (this._activeTarget !== target) {\r\n        this._activate(target);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\r\n      this._activeTarget = null;\r\n      this._clear();\r\n      return;\r\n    }\r\n\r\n    for (let i = this._offsets.length; i--; ) {\r\n      const isActiveTarget =\r\n        this._activeTarget !== this._targets[i] &&\r\n        scrollTop >= this._offsets[i] &&\r\n        (typeof this._offsets[i + 1] === \"undefined\" || scrollTop < this._offsets[i + 1]);\r\n\r\n      if (isActiveTarget) {\r\n        this._activate(this._targets[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _activate(target) {\r\n    this._activeTarget = target;\r\n\r\n    this._clear();\r\n\r\n    const queries = this._selector\r\n      .split(\",\")\r\n      .map((selector) => `${selector}[data-target=\"${target}\"],${selector}[href=\"${target}\"]`);\r\n\r\n    const $link = $([].slice.call(document.querySelectorAll(queries.join(\",\"))));\r\n\r\n    if ($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)) {\r\n      $link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE);\r\n      $link.addClass(CLASS_NAME_ACTIVE);\r\n    } else {\r\n      // Set triggered link as active\r\n      $link.addClass(CLASS_NAME_ACTIVE);\r\n      // Set triggered links parents as active\r\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\r\n      $link\r\n        .parents(SELECTOR_NAV_LIST_GROUP)\r\n        .prev(`${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`)\r\n        .addClass(CLASS_NAME_ACTIVE);\r\n      // Handle special case when .nav-link is inside .nav-item\r\n      $link\r\n        .parents(SELECTOR_NAV_LIST_GROUP)\r\n        .prev(SELECTOR_NAV_ITEMS)\r\n        .children(SELECTOR_NAV_LINKS)\r\n        .addClass(CLASS_NAME_ACTIVE);\r\n    }\r\n\r\n    $(this._scrollElement).trigger(EVENT_ACTIVATE, {\r\n      relatedTarget: target,\r\n    });\r\n  }\r\n\r\n  _clear() {\r\n    [].slice\r\n      .call(document.querySelectorAll(this._selector))\r\n      .filter((node) => node.classList.contains(CLASS_NAME_ACTIVE))\r\n      .forEach((node) => node.classList.remove(CLASS_NAME_ACTIVE));\r\n  }\r\n\r\n  // Static\r\n  static _jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = $(this).data(DATA_KEY);\r\n      const _config = typeof config === \"object\" && config;\r\n\r\n      if (!data) {\r\n        data = new ScrollSpy(this, _config);\r\n        $(this).data(DATA_KEY, data);\r\n      }\r\n\r\n      if (typeof config === \"string\") {\r\n        if (typeof data[config] === \"undefined\") {\r\n          throw new TypeError(`No method named \"${config}\"`);\r\n        }\r\n\r\n        data[config]();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Data API implementation\r\n */\r\n\r\n$(window).on(EVENT_LOAD_DATA_API, () => {\r\n  const scrollSpys = [].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));\r\n  const scrollSpysLength = scrollSpys.length;\r\n\r\n  for (let i = scrollSpysLength; i--; ) {\r\n    const $spy = $(scrollSpys[i]);\r\n    ScrollSpy._jQueryInterface.call($spy, $spy.data());\r\n  }\r\n});\r\n\r\n/**\r\n * jQuery\r\n */\r\n\r\n$.fn[NAME] = ScrollSpy._jQueryInterface;\r\n$.fn[NAME].Constructor = ScrollSpy;\r\n$.fn[NAME].noConflict = () => {\r\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\r\n  return ScrollSpy._jQueryInterface;\r\n};\r\n\r\nexport default ScrollSpy;\r\n"],"names":["NAME","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","EVENT_ACTIVATE","EVENT_SCROLL","EVENT_LOAD_DATA_API","Default","offset","method","target","DefaultType","ScrollSpy","constructor","element","config","_element","_scrollElement","tagName","window","_config","this","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","on","event","_process","refresh","VERSION","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","slice","call","document","querySelectorAll","map","targetSelector","Util","getSelectorFromElement","querySelector","targetBCR","getBoundingClientRect","width","height","top","filter","Boolean","sort","a","b","forEach","item","push","dispose","removeData","off","isElement","id","attr","getUID","typeCheckConfig","pageYOffset","scrollTop","scrollHeight","Math","max","body","documentElement","_getOffsetHeight","innerHeight","maxScroll","length","_activate","_clear","i","queries","split","selector","$link","join","hasClass","closest","find","addClass","parents","prev","children","trigger","relatedTarget","node","classList","contains","remove","each","data","TypeError","scrollSpys","$spy","_jQueryInterface","Constructor","noConflict"],"mappings":"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"}